# This code is part of Qiskit.
#
# (C) Copyright IBM 2021, 2023.
#
# This code is licensed under the Apache License, Version 2.0. You may
# obtain a copy of this license in the LICENSE.txt file in the root directory
# of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.
#
# Any modifications or derivative works of this code must retain this
# copyright notice, and modified files need to carry a notice indicating
# that they have been altered from the originals.

name: Application Benchmarks Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # run every day at 1AM
    - cron: '0 1 * * *'

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  Checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
    steps:
      - name: Print Concurrency Group
        env:
          CONCURRENCY_GROUP: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}
        run: |
          echo -e "\033[31;1;4mConcurrency Group\033[0m"
          echo -e "$CONCURRENCY_GROUP\n"
        shell: bash
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements-dev.txt
      - uses: ./.github/actions/install-main-dependencies
        with:
          os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          pip install -U -r requirements-dev.txt
          sudo apt-get -y install pandoc graphviz
          sudo apt-get -y install python3-enchant
          sudo apt-get -y install hunspell-en-us
          pip install pyenchant
        shell: bash
      - name: Install Optimization
        uses: ./.github/actions/install-application
        with:
          os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          application-name: optimization
      - name: Install Finance
        uses: ./.github/actions/install-application
        with:
          os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          application-name: finance
      - name: Install Machine Learning
        uses: ./.github/actions/install-application
        with:
          os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          application-name: machine-learning
      - name: Install Nature
        uses: ./.github/actions/install-application
        with:
          os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          application-name: nature
      - name: Install Extras
        run: |
          echo 'Install optimization extras'
          pip install qiskit-optimization[cplex,cvx,matplotlib,gurobi]
          echo 'Install machine learning extras'
          pip install qiskit-machine-learning[torch,sparse]
          echo 'Install nature extras'
          pip install qiskit-nature[pyscf]
        shell: bash
      - run:  pip check
        if: ${{ !cancelled() }}
        shell: bash
      - name: Copyright Check
        run: |
          python tools/check_copyright.py -check
        if: ${{ !cancelled() }}
        shell: bash
      - run:  make spell
        if: ${{ !cancelled() }}
        shell: bash
      - name: Style Check
        run: |
          make clean_sphinx
          make style
        if: ${{ !cancelled() }}
        shell: bash
      - run: make lint
        if: ${{ !cancelled() }}
        shell: bash
      - run: make mypy
        if: ${{ !cancelled() }}
        shell: bash
      - name: Run make html
        run: |
          make clean_sphinx
          make html
          cd docs/_build/html
          mkdir artifacts
          tar -zcvf artifacts/documentation.tar.gz --exclude=./artifacts .
        if: ${{ !cancelled() }}
        shell: bash
      - name: Run upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/_build/html/artifacts/documentation.tar.gz
        if: ${{ !cancelled() }}
  Benchmarks-Dev:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
        domain: ["finance", "machine_learning", "nature", "optimization"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          pushd ${{ matrix.domain }}
          if [ -n "$(find benchmarks/* -not -name '__*' | head -1)" ]; then
            pip install -U pip asv virtualenv
            # for qiskit-aer build under asv
            sudo apt-get -y install libopenblas-dev
          fi
          popd
        shell: bash
      - name: Benchmarks
        run: |
          pushd ${{ matrix.domain }}
          if [ -n "$(find benchmarks/* -not -name '__*' | head -1)" ]; then
            asv machine --yes
            asv update --verbose || true
            asv run --quick --show-stderr --verbose
          fi
          popd
        shell: bash
